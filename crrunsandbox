#!/usr/bin/python

import multiprocessing
import os
import re
import subprocess
import sys
import util

from optparse import OptionParser

# Options

parser = OptionParser()
parser.add_option("-v", "--verbose", dest="verbose",
                  action="store_true",
                  help="show verbose messages")
parser.add_option("-d", "--dryrun", dest="dryrun",
                  action="store_true",
                  help="dry run, log what we plan to do but don't actually do anything")
parser.add_option("-l", "--login-manager", dest="loginmanager",
                  action="store_true",
                  help="use the login manager so that the out-of-box " + \
                       "experience is included")

(options, args) = parser.parse_args()

# TODO: hide compilation output.

HOME = os.path.expanduser("~")
GOMA_DIR = os.path.join(HOME, "goma")
TEST_USER_PROFILE_PATH = os.path.join(HOME, "tmp", "test-sandbox")
gn_args = [
  'target_os = "chromeos"',
  'is_component_build = true',
  'enable_nacl = false',
]
if util.is_google_machine():
  gn_args.append('use_goma = true')
  gn_args.append('goma_dir="' + GOMA_DIR  + '"')
else:
  gn_args.append('use_goma = false')

util.ensure_goma_installed()

n_cpus = multiprocessing.cpu_count()
n_threads = max(1, n_cpus - 1)
n_jobs = 10 * n_threads

os.chdir(os.path.join(HOME, "chromium", "src"))
cmd = "gn gen out_cros/Release --args='" + " ".join(gn_args) + "'"
print("Running gn gen...")
os.system(cmd)

# TODO: Run goma if it's not running.
if not util.is_process_running("compiler_proxy"):
  util.show_goma_warning()
cmd = ("ninja -C out_cros/Release -j" + str(n_jobs) +
       " chrome chrome_sandbox")
print("Compiling, this might take a while...")
util.system_silent(cmd, options)

sbin_target = "/usr/local/sbin/chrome-devel-sandbox"
if not os.path.exists(sbin_target):
  os.system("sudo cp out_cros/Release/chrome_sandbox " + sbin_target)
  os.system("sudo chown root:root /usr/local/sbin/chrome-devel-sandbox")
  os.system("sudo chmod 4755 /usr/local/sbin/chrome-devel-sandbox")

#TODO: Make the data dir configurable
cmd = "out_cros/Release/chrome --user-data-dir=" + TEST_USER_PROFILE_PATH + \
    (" --login-manager" if options.loginmanager else "")
print("Running chrome...")
util.system_silent(cmd, options)
